package com.coforge.training.agribid.insurance.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import com.coforge.training.agribid.insurance.model.Claim;
import com.coforge.training.agribid.insurance.service.ClaimService;
import com.fasterxml.jackson.databind.ObjectMapper;

@RestController
@RequestMapping("/api/claim")
public class ClaimController {

    @Autowired
    private ClaimService claimService;

//    @PostMapping("/{policyId}")
//    public Claim claimInsurance(@PathVariable Long policyId, 
//                                @RequestPart("claim") String claimJson, 
//                                @RequestPart("file") MultipartFile file) {
//        try {
//            ObjectMapper objectMapper = new ObjectMapper();
//            Claim claim = objectMapper.readValue(claimJson, Claim.class);
//            // Process the file as needed
//            claim.setSupportingDocuments(file.getBytes());
//            return claimService.claimInsurance(policyId, claim);
//        } catch (Exception e) {
//            throw new RuntimeException("Error processing claim JSON", e);
//        }
//    }
    
    @PostMapping("/{policyId}")
    public ResponseEntity<Claim> claimInsurance(@PathVariable Long policyId,
                                                @RequestPart("claim") String claimJson,
                                                @RequestPart("file") MultipartFile file) {
        try {
            ObjectMapper objectMapper = new ObjectMapper();
            Claim claim = objectMapper.readValue(claimJson, Claim.class);
            
            // Log file details
            System.out.println("Received file: " + file.getOriginalFilename());
            
            // Process the file as needed
            claim.setSupportingDocuments(file.getBytes());
            
            Claim savedClaim = claimService.claimInsurance(policyId, claim);
            return new ResponseEntity<>(savedClaim, HttpStatus.CREATED);
        } catch (IOException e) {
            e.printStackTrace();
            return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
        } catch (Exception e) {
            e.printStackTrace();
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    @GetMapping("/{policyId}")
    public Claim getClaimByPolicyId(@PathVariable Long policyId) {
        return claimService.getClaimByPolicyId(policyId);
    }
}
